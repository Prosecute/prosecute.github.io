<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified"
    xmlns="http://prosecute.github.io/XMLSchema/Core"
    targetNamespace="http://prosecute.github.io/XMLSchema" vc:minVersion="1.1" version="0.1"
    xmlns:pr="http://prosecute.github.io/XMLSchema">
    <xs:complexType name="Match">
        <xs:all minOccurs="0">
            <xs:element name="TrialMatches" maxOccurs="1" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Contains only trial matches that has found match.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded" minOccurs="0">
                        <xs:element name="TrialMatch" maxOccurs="unbounded" minOccurs="1">
                            <xs:annotation>
                                <xs:documentation/>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:all minOccurs="1">
                                    <xs:element name="Results" minOccurs="1">
                                        <xs:complexType>
                                            <xs:choice maxOccurs="1" minOccurs="1">
                                                <xs:element name="TokenCompare"
                                                  type="pr:TokenCompareMatch">
                                                  <xs:annotation>
                                                  <xs:documentation>Result of token compare match.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                            </xs:choice>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="ConsoleOutput" maxOccurs="1" minOccurs="0">
                                        <xs:complexType>
                                            <xs:sequence maxOccurs="unbounded" minOccurs="0">
                                                <xs:element name="ConsoleLine" type="pr:ConsoleLine"
                                                  maxOccurs="unbounded" minOccurs="0"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Errors" minOccurs="0">
                                        <xs:complexType>
                                            <xs:sequence maxOccurs="unbounded" minOccurs="0">
                                                <xs:element name="Error" maxOccurs="unbounded"
                                                  minOccurs="0">
                                                  <xs:complexType>
                                                  <xs:simpleContent>
                                                  <xs:extension base="xs:string"> </xs:extension>
                                                  </xs:simpleContent>
                                                  </xs:complexType>
                                                </xs:element>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:all>
                                <xs:attribute name="trialID" type="xs:int">
                                    <xs:annotation>
                                        <xs:documentation>Refers to trial in Configuration.</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:all>
        <xs:attribute name="refNameA" type="xs:normalizedString"/>
        <xs:attribute name="refNameB" type="xs:normalizedString"/>
        <xs:attribute name="refEntitiesLocationAID" type="xs:int"/>
        <xs:attribute name="refEntitiesLocationBID" type="xs:int"/>
        <xs:attribute name="refSubmissionA" type="xs:anyURI"/>
        <xs:attribute name="refSubmissionB" type="xs:anyURI"/>
        <xs:attribute name="match" type="pr:Percent">
            <xs:annotation>
                <xs:documentation>Precalculated value from trialmatches.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="TokenCompareMatch">
        <xs:sequence>
            <xs:element name="RangeMatch" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="fileA" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Partial URL from Submission folder.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="fileB" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Partial URL from Submission folder.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="startCharA" type="xs:int"/>
                    <xs:attribute name="startCharB" type="xs:int"/>
                    <xs:attribute name="endCharA" type="xs:int"/>
                    <xs:attribute name="endCharB" type="xs:int"/>
                    <xs:attribute name="tokenStartA" type="xs:int" use="required">
                        <xs:annotation>
                            <xs:documentation>First matching token in A.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="tokenStartB" type="xs:int" use="required">
                        <xs:annotation>
                            <xs:documentation>First matching token in B.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="tokenLength" type="xs:int" use="required">
                        <xs:annotation>
                            <xs:documentation>Length of match.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="TrialConfiguration">
        <xs:all>
            <xs:element name="TrialType">
                <xs:complexType>
                    <xs:choice>
                        <xs:element minOccurs="0" name="SourceCode" type="pr:SourceCodeType"/>
                        <xs:element minOccurs="0" name="PlainText" type="pr:PlainTextType"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="FileFilters" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FileFilter" type="pr:FileFilter" maxOccurs="unbounded"
                            minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="BaseCode">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:element maxOccurs="1" name="Location" type="xs:anyURI"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="Options">
                <xs:complexType>
                    <xs:attribute default="false" name="seperateFiles" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>If false, then all source files,etc. in submission are marged together for comparison.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:all>
        <xs:attribute name="trialID" type="xs:int">
            <xs:annotation>
                <xs:documentation>
                    ID of Trial.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="trialName" type="xs:normalizedString">
            <xs:annotation>
                <xs:documentation>Only used in GUI.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="100" name="weight" type="xs:positiveInteger"/>
    </xs:complexType>
    <xs:complexType name="ConsoleLine">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="level">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="INFO"/>
                            <xs:enumeration value="DEBUG"/>
                            <xs:enumeration value="WARN"/>
                            <xs:enumeration value="ERROR"/>
                            <xs:enumeration value="FATAL"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="time" type="xs:time"/>
                <xs:attribute name="source" type="xs:normalizedString"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="Token">
        <xs:sequence>
            <xs:element name="Description" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="tokenID" type="xs:int"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="TokenPosition">
        <xs:attribute name="refTokenID" type="xs:int"/>
        <xs:attribute name="file" type="xs:anyURI"/>
        <xs:attribute name="line" type="xs:int"/>
        <xs:attribute name="position" type="xs:int"/>
        <xs:attribute name="length" type="xs:int"/>
    </xs:complexType>
    <xs:simpleType name="Percent">
        <xs:annotation>
            <xs:documentation>The percent type specifies a percentage from 0 to 100.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="100"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType final="restriction" name="PartURI">
        <xs:annotation>
            <xs:documentation>Part of URI without slashes.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:anyURI">
            <xs:pattern value="[^/\\]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Extension">
        <xs:annotation>
            <xs:documentation>File extension.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-zA-Z0-9]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TestMode">
        <xs:annotation>
            <xs:documentation>Mode for testing. testOnly means this file will be compared with others. compareOnly means this file will be used to test others.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="test"/>
            <xs:enumeration value="compare"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TrialCategory">
        <xs:annotation>
            <xs:documentation>Category of trial.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="sourcecode"/>
            <xs:enumeration value="text"/>
            <xs:enumeration value="image"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="Location">
        <xs:annotation>
            <xs:documentation>Location of file/folder with exclude/include filtering.</xs:documentation>
        </xs:annotation>
        <xs:sequence maxOccurs="1">
            <xs:element maxOccurs="unbounded" minOccurs="0" name="FolderFilter"
                type="pr:FolderFilter"/>
        </xs:sequence>
        <xs:attribute name="path" type="xs:anyURI" use="required"/>
        <xs:attribute default="false" name="direct" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="EntitiesLocation">
        <xs:annotation>
            <xs:documentation>URI of file/folder which will be used in testing/comparing.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="pr:Location">
                <xs:sequence maxOccurs="1" minOccurs="1">
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="EntityContentFilter"
                        type="pr:FileFilter"/>
                </xs:sequence>
                <xs:attribute default="test" name="mode" type="pr:TestMode" use="optional"> </xs:attribute>
                <xs:attribute name="entitiesLocationID" type="xs:nonNegativeInteger"/>
                <xs:attribute name="name" type="xs:string"/>
            </xs:extension>

        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="FileFilter">
        <xs:all maxOccurs="1" minOccurs="0">
            <xs:element name="FileModifiedDate" type="pr:FilteredParameter" maxOccurs="1"
                minOccurs="0"/>
            <xs:element name="FileCreateDate" type="pr:FilteredParameter" maxOccurs="1"
                minOccurs="0"/>
            <xs:element name="FileSize" type="pr:FilteredParameter" maxOccurs="1" minOccurs="0"/>
            <xs:element name="FileExtension" type="pr:FilteredList" maxOccurs="1" minOccurs="0"/>
            <xs:element name="Regex" type="xs:string" maxOccurs="1" minOccurs="0"/>
            <xs:element name="Path" type="pr:FilteredList" maxOccurs="1" minOccurs="0"/>
        </xs:all>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="mode" type="pr:RestrictionMode" use="required"> </xs:attribute>
    </xs:complexType>
    <xs:complexType name="FolderFilter">
        <xs:sequence>
            <xs:element name="Regex" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="mode" type="pr:RestrictionMode" use="required"/>
        <xs:attribute name="name" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="FilteredParameter">
        <xs:attribute name="operation" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="=="/>
                    <xs:enumeration value="!="/>
                    <xs:enumeration value="&lt;"/>
                    <xs:enumeration value=">"/>
                    <xs:enumeration value="&lt;="/>
                    <xs:enumeration value=">="/>
                    <xs:enumeration value="startWith"/>
                    <xs:enumeration value="endWith"/>
                    <xs:enumeration value="contains"/>
                    <xs:enumeration value="notContains"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="FilteredList">
        <xs:sequence>
            <xs:element name="Element" type="pr:FilteredParameter" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="operation" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="all"/>
                    <xs:enumeration value="any"/>
                    <xs:enumeration value="none"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:simpleType name="RestrictionMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="include"/>
            <xs:enumeration value="exclude"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SourceCodeType">
        <xs:sequence>
            <xs:element name="Mode">
                <xs:complexType>
                    <xs:choice maxOccurs="1" minOccurs="1">
                        <xs:element maxOccurs="1" minOccurs="0" name="TokenCompareMode"
                            type="pr:TokenCompareMode"/>
                        <xs:element minOccurs="0" name="NamingAndCommentMode"
                            type="pr:NamingAndCommentMode"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:normalizedString"/>
        <xs:attribute name="version" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="PlainTextType"/>
    <xs:complexType name="TokenCompareMode">
        <xs:attribute name="algorithm">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="GSTiling"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="sensitivity" default="1" type="xs:float"/>
        <xs:attribute name="minMatch" type="xs:positiveInteger" default="20"/>
        <xs:attribute name="maxMatch" type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>0 = ignored</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="NamingAndCommentMode">
        <xs:sequence>
            <xs:element name="Include">
                <xs:complexType>
                    <xs:attribute default="true" name="oneLineComment" type="xs:boolean"/>
                    <xs:attribute default="true" name="multiLineComment" type="xs:boolean"/>
                    <xs:attribute default="true" name="className" type="xs:boolean"/>
                    <xs:attribute default="true" name="functionName" type="xs:boolean"/>
                    <xs:attribute default="true" name="parameterName" type="xs:boolean"/>
                    <xs:attribute default="true" name="classVariableName" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Also global variables for nonstrict OOP languages</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="true" name="namespaceName" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Also packageName</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="true" name="innerVariableName" type="xs:boolean"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
